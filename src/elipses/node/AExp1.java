/* This file was generated by SableCC (http://www.sablecc.org/). */

package elipses.node;

import elipses.analysis.*;

@SuppressWarnings("nls")
public final class AExp1 extends PExp1
{
    private PExp0 _exp0_;

    public AExp1()
    {
        // Constructor
    }

    public AExp1(
        @SuppressWarnings("hiding") PExp0 _exp0_)
    {
        // Constructor
        setExp0(_exp0_);

    }

    @Override
    public Object clone()
    {
        return new AExp1(
            cloneNode(this._exp0_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExp1(this);
    }

    public PExp0 getExp0()
    {
        return this._exp0_;
    }

    public void setExp0(PExp0 node)
    {
        if(this._exp0_ != null)
        {
            this._exp0_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp0_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._exp0_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._exp0_ == child)
        {
            this._exp0_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._exp0_ == oldChild)
        {
            setExp0((PExp0) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
