/* This file was generated by SableCC (http://www.sablecc.org/). */

package elipses.node;

import elipses.analysis.*;

@SuppressWarnings("nls")
public final class ADeclConst extends PDeclConst
{
    private TLParen _lp1_;
    private TKwConst _kwConst_;
    private PType _type_;
    private TIdentifier _identifier_;
    private TLParen _lp2_;
    private PExp _exp_;
    private TRParen _rp2_;
    private TRParen _rp1_;

    public ADeclConst()
    {
        // Constructor
    }

    public ADeclConst(
        @SuppressWarnings("hiding") TLParen _lp1_,
        @SuppressWarnings("hiding") TKwConst _kwConst_,
        @SuppressWarnings("hiding") PType _type_,
        @SuppressWarnings("hiding") TIdentifier _identifier_,
        @SuppressWarnings("hiding") TLParen _lp2_,
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TRParen _rp2_,
        @SuppressWarnings("hiding") TRParen _rp1_)
    {
        // Constructor
        setLp1(_lp1_);

        setKwConst(_kwConst_);

        setType(_type_);

        setIdentifier(_identifier_);

        setLp2(_lp2_);

        setExp(_exp_);

        setRp2(_rp2_);

        setRp1(_rp1_);

    }

    @Override
    public Object clone()
    {
        return new ADeclConst(
            cloneNode(this._lp1_),
            cloneNode(this._kwConst_),
            cloneNode(this._type_),
            cloneNode(this._identifier_),
            cloneNode(this._lp2_),
            cloneNode(this._exp_),
            cloneNode(this._rp2_),
            cloneNode(this._rp1_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADeclConst(this);
    }

    public TLParen getLp1()
    {
        return this._lp1_;
    }

    public void setLp1(TLParen node)
    {
        if(this._lp1_ != null)
        {
            this._lp1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lp1_ = node;
    }

    public TKwConst getKwConst()
    {
        return this._kwConst_;
    }

    public void setKwConst(TKwConst node)
    {
        if(this._kwConst_ != null)
        {
            this._kwConst_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._kwConst_ = node;
    }

    public PType getType()
    {
        return this._type_;
    }

    public void setType(PType node)
    {
        if(this._type_ != null)
        {
            this._type_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._type_ = node;
    }

    public TIdentifier getIdentifier()
    {
        return this._identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(this._identifier_ != null)
        {
            this._identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identifier_ = node;
    }

    public TLParen getLp2()
    {
        return this._lp2_;
    }

    public void setLp2(TLParen node)
    {
        if(this._lp2_ != null)
        {
            this._lp2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lp2_ = node;
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TRParen getRp2()
    {
        return this._rp2_;
    }

    public void setRp2(TRParen node)
    {
        if(this._rp2_ != null)
        {
            this._rp2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rp2_ = node;
    }

    public TRParen getRp1()
    {
        return this._rp1_;
    }

    public void setRp1(TRParen node)
    {
        if(this._rp1_ != null)
        {
            this._rp1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rp1_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._lp1_)
            + toString(this._kwConst_)
            + toString(this._type_)
            + toString(this._identifier_)
            + toString(this._lp2_)
            + toString(this._exp_)
            + toString(this._rp2_)
            + toString(this._rp1_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._lp1_ == child)
        {
            this._lp1_ = null;
            return;
        }

        if(this._kwConst_ == child)
        {
            this._kwConst_ = null;
            return;
        }

        if(this._type_ == child)
        {
            this._type_ = null;
            return;
        }

        if(this._identifier_ == child)
        {
            this._identifier_ = null;
            return;
        }

        if(this._lp2_ == child)
        {
            this._lp2_ = null;
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._rp2_ == child)
        {
            this._rp2_ = null;
            return;
        }

        if(this._rp1_ == child)
        {
            this._rp1_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._lp1_ == oldChild)
        {
            setLp1((TLParen) newChild);
            return;
        }

        if(this._kwConst_ == oldChild)
        {
            setKwConst((TKwConst) newChild);
            return;
        }

        if(this._type_ == oldChild)
        {
            setType((PType) newChild);
            return;
        }

        if(this._identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

        if(this._lp2_ == oldChild)
        {
            setLp2((TLParen) newChild);
            return;
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._rp2_ == oldChild)
        {
            setRp2((TRParen) newChild);
            return;
        }

        if(this._rp1_ == oldChild)
        {
            setRp1((TRParen) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
