#!/usr/bin/elipc

entrada (inteiro other(inteiro x): ( 
    (lambda(x|y|z):( se(x) entao (z) senao --3,1 )
    [
        verdadeiro
        |2
        |(lambda(r|p|q):( se(r) entao (p) senao --q )[verdadeiro|2,1|3,1])
    ])
)
)


( inteiro mdc(inteiro a | inteiro b) :(
   se (b = 0) entao a senao mdc(b | a % b)
))


( inteiro a(inteiro b | inteiro c) :(
    (lambda (x) : ((lambda () : (2) [])) [
        (lambda () : (2) [])
    ])
))

( inteiro home(inteiro mdc(inteiro md(inteiro| inteiro| inteiro))) :(
    2
))
( inteiro higher_order_lambda_wrapped_in_block():(
   (lambda (wraped) : (2) [(home)]) 
))

( inteiro higher_order_lambda():(
   (lambda (y | fn) : (y / fn(y | 2) *2) [2| (mdc)])  # passing a func make problems arise
   +(lambda (y) : (2) [((home))])  # passing a func make problems arise
))


( inteiro complex_lambda():(
    (2)*(2)
    + (lambda () : (2) [])
    + (lambda (x | y) : ( (lambda () : ((lambda () : ((lambda (x | mdc) : (x / mdc(x | 2) *2) [15 | mdc])) [])) [])+(((x))) / mdc(x | (y)) * y) [2| 20]) # calculo mmc
    + (lambda (x | mdc) : (x / mdc(x | 2) *2) [(lambda () : (2) []) | mdc])  # passing a func make problems arise
))
